name: Python application

on:
  pull_request:
    branches: [ main ]
    paths-ignore: [ Dockerfile, .github/workflows/dockerhub.yml ]
  push:
    branches: [ main ]
    paths-ignore: [ Dockerfile, .github/workflows/dockerhub.yml ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    - name: Set up FFMpeg
      uses: FedericoCarboni/setup-ffmpeg@v3
    - name: Validate Docker image
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        docker run --rm --env OPENAI_API_KEY=$OPENAI_API_KEY -i dennislwm/playscribe:latest --listmodels
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Check for changes in input.txt
      id: checkfile
      run: |
        echo "::set-output name=changed::$(git diff --name-only HEAD^ HEAD | grep '^examples/input.txt$' || echo 'false')"
    - name: Run application
      # if: steps.checkfile.outputs.changed != 'false'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        export ERR=0 && export URL=$( cat examples/input.txt ) && echo ${URL} && URL=${URL} make sub || export ERR=2
        if [ ${ERR} > 0 ]; then
          echo Could not extract wisdom > examples/result.txt
        elif [ -f examples/transcript.txt ]; then
          cat examples/transcript.txt | docker run --rm --env OPENAI_API_KEY=$OPENAI_API_KEY -i dennislwm/playscribe:latest --pattern extract_article_wisdom > examples/result.txt
        fi
        if [[ -n `git status --porcelain examples/transcript.txt` ]]; then
          git config --global user.email "playscribebot@telegram.org"
          git config --global user.name "Telegram Bot"
          git add examples/transcript.txt
          git add examples/result.txt
          git commit -m "Update result.txt"
          git push
        fi