hey I'm Jal and I'd love to show you fire zone fire zone is 
a replacement for-legacy corporate vbn it's built on wire 
guard it integrates with your identity-provider and is 
designed from the start to be horizontally scalable I'll 
be-showing you a few of its features now so let's get 
started first I'll start by-spinning up a few fire zone 
gateways in the cloud with terraform uh gateways 
are-lightweight self-contained Linux binaries uh statically 
compiled with-rust and they're responsible for terminating 
your wire guard tunnels uh-to your private resources uh 
gateways also perform that traversal so you don't-need to 
open firewall ports to deploy them so let's go ahead and do 
that now-I'll be prompted to enter a token uh this is used 
to authenticate the-gateways and you can obtain this from 
the admin portal while that's running uh-let's take a look 
at the admin portal here I have a site named demo uh-sites 
are where gateways are deployed uh and also where you 
define your resources-uh the services the hosts or the 
networks you want to manage access to-you can see here that 
the gateways I've deployed earlier are online and 
healthy-so all gateways in a site load balance and fail 
over for each other if one-Gateway goes down uh connections 
from your Workforce will automatically-migrate to another 
healthy Gateway uh that process takes about 10 seconds 
on-average uh and it happens without any user-intervention 
so now that we have our gateways up and running let's 
define a-resource in this case I'm going to add a 
cider-resource uh which allows you to manage access to a 
subnet similar to a-traditional VPN so this is the subnet 
where my-gateways are deployed put in the address-here and 
I'll allow SSH to them on TCP 22 and I'll allow icmp 
for-Ping so all access in fire zone is default deny uh I've 
got to create a-policy to allow access to anything uh a 
policy uh ties a-group to the resource that it should have 
access to in this case I've got a-devops group that I 
created earlier and added my my user to uh it's a 
manually-manage group uh but we also support directory sync 
with all of the major-identity providers so if I've 
connected my identity provider here I would see-the groups 
in that list as well before I create the policy uh I should 
mention-that everything you see here is updated in real 
time with Elixir live view uh-all configuration updates are 
also broadcasted to clients in gateways uh-using Phoenix 
channels so let me sign into my client-first and I will 
select the demo account sign in with jump-Cloud all right 
so now my client is authenticated you'll see I have 
no-resources I'll go ahead and create the policy and you'll 
see now I have that-resource in my list okay so let's try 
to Ping the Gateway and make sure that it's-working great 
I'm able to Ping it so let's disable icmp and see 
what-happens so I'll edit the resource I'll disable icmp 
and I should see that the-pings are failing and it looks 
like they're timing out all right so let's-turn it back on 
come back here and edit the-resource turn icmp back on and 
the pings are-succeeding okay so that's a CER resource uh 
and-let's go ahead and add a DNS resource DNS resources 
allow you to-manage access to private and even public apps 
uh they can be used to manage-access to some services but 
not others uh even if they resolve to the same IP-address 
on the same host uh and they also handle that 6 to4 and 4 
6-translation for you so your Workforce can connect to IPv6 
resources even if-they're on a network with no IPv6 
connectivity so in this-case we'll use a DNS resource to 
lock down access to github.com using github's-IP allow list 
feature I'll show you how that works so I'll put github.com 
here-in the address using a wild card and I'll go ahead and 
save it I'll-Define a policy allowing everyone in my 
organization to access-GitHub we can see here that it's in 
my resource list-now and as a final step I'll take the 
public IP address that the gateways are-running from and 
I'll enter that in the IP allow so let me go to GitHub go 
to my-organization go to settings authentication 
security-go to the IP allow list section enable it and 
enter the public IP address of my-gateways so now my 
private resources on GitHub are secured with fire zone 
my-Workforce needs to be signed in with fire zone in order 
to access my private-rep repositories on github.com so this 
provides a secure and reliable way to-lock down access to 
many thirdparty SAS applications without having to 
know-their IP address es in advance just by using their 
DNS-names all right the last thing I'll show you is what 
happens when users are-removed from your organization I 
mentioned that all configuration updates-are broadcasted in 
real time so this includes deleting users as well 
or-suspending them so what I'll do now is I will revoke the 
session uh that my-client is using that I signed in with 
earlier so-let me go to actors I'll go to my user 
account-and I'll revoke the token that my client is 
using-here and you can see that my client session has been 
immediately terminated-uh and I'll need to reauthenticate 
in order to gain access so that's it I hope-you enjoyed the 
demo that's just a little taste of how fire zone can 
be-used to secure your Workforce to try it for yourself 
head to Fire zone. deev and-sign up for an account thanks 
for watching
