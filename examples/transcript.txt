okay um mark thank you can you all see my screen that 
says-agenda indeed yes yes so I haven't actually made an 
agenda this is um some-slides I'm putting together uh for a 
customer we're working with at the-moment and jira's a 
really big part of convincing their Dev teams to get 
on-board um it's it's a project that's actually been driven 
by the security-team um they want to get all source code 
and everything in into gitlab so it can-all be subject to 
scanning and there are some teams that are stuck in prev 
VCS-days um so we're trying to drag them you know Kicking 
and Screaming into the 21st-century um but a big big part 
of this is if we can get the jro integration-working so I 
played around with it and if you've ever done this before I 
don't-imagine anything I'm going to show you is going to be 
you know revolutionary or-you know ground shaking or 
anything like that um but I thought it'd be useful in-case 
anyone hasn't hasn't done this and we can always record it 
and then if the-first time anyone wants to set this stuff 
up or or find out about it we-we've got a recording and 
there's a chat yeah yep exactly yes Glenn I I I don't-think 
I I did did I I don't think so I just forgot to say-it at 
the beginning like I tried to remember to do so yeah yeah 
exactly okay-so um yeah what I've done is I got this-going 
in my home lab so I've got um an omnius installation of 
gitlab running-here and I've also got jir running which 
I've got going in a Docker container uh-for reference if 
you want to do this yourself um it's quite 
straightforward-I've got my here's the docker file um can 
you see that or do I need to zoom in-I can see it fine cool 
yeah that's it it's a really really simple Docker file-that 
just starts using the official container when you start it 
it'll prompt-you for license and you can if I just use like 
a personal account you can go-and create like a trial 
license that's good for I don't know 30 days or-something 
like that it's it's enough to test the integration anyway 
and the only-other thing I have to do with it is so I could 
get lets en Crypt going I had to-stick it behind an engine 
X proxy which was because it's running in a home-lab and 
that's that's how I need to expose it to the outside world 
and I-found that there is some documentation on what to do 
if you're running jira-behind an engine X proxy but 
effectively you just have to take the server. xml.-J2 file 
out of the container and modify add these lines that I've 
highlighted-here that have says okay traffic coming into 
this thing is over this you know-this scheme that's the URL 
and that's the port-I only mentioned that because as it 
turns out having https like TLS-encryption is required 
between both end points if you try and set up 
the-integration just using like bog standard HTTP um it 
doesn't seem to work and I-got quite a few errors um with 
things saying no you know it must be a secure-endpoint Etc 
so just worth bearing in mind and that's what that that 
line does-in my Docker compose but you might not even you 
might not need that-so according to this this sort of deck 
I put together um I've covered like the-Integrations and 
workflows and what you actually get out of it I figure for 
this-what I'll do is I'll just skip through this very 
briefly and then I'll actually-show you it and then we'll 
look at the setup side of it okay or vice versa I'm-you 
know I'm I'm open um and if anyone's got any questions or 
comments or-anything just shout out as we go along okay 
because I I really haven't-rehearsed this I don't really 
have a script or anything so-um right so some of the 
benefits you get out of it first off you get 
issue-synchronization okay so anything that you create in J 
any tickets that you can-create you can view them straight 
from within gitlab itself which is which is-really sweet 
and there's also an integration-that goes the other way so 
that jir can see what's going on inside gitlab and-what 
happens with that is you can see all the commits and 
activity that-happened on something as long as you 
reference the the Jer issue you know the-the the ticket 
name like test-1 or whatever as long as you reference 
that-in like your branches or your commit messages or your 
merge requests it can-link them together so as an example 
in jir this is what it looks like you can-see there's all 
these commits merge requests and things um happening 
and-we've also enabled there's a transitions thing that you 
can enable so if you put-the magic words um closes test one 
or resolves test one or something like that-it can 
automatically move that jir ticket or issue or whatever 
yeah issue-it's what we call them it moves that issue into 
the done pile automatically-for you and there's also some 
other stuff-you can do you like you can configure it so 
that for instance-a um a a merge request cannot be closed 
unless a um has an Associated Jer issue-with it which is 
just quite nice as a sort of buil-in policy-thing so I uh 
what I'll show you it um so I've got this enabled on a 
few-projects if I go in here I'll probably zoom in I'll 
zoom in just a little bit-so in jir if I go to my project 
and I'll show you how I've done all like the-different 
projects and the mappings and all of that stuff let's go to 
my test-project and here's the backlog and let's just I 
don't know-okay so I've now got a new issue here and if I 
go here-um have I mentioned by the way I don't like-jir 
nobody does yeah I'm like getting PTSD like-going through 
this stuff again anyway so here's the issue and if we go 
back to my-test project um there is a a built-in thing I 
think this is done yeah under-the plan section there's a 
jir issues and an open jir link and if I click on-jir 
issues you see this is actually showing up now 
interestingly um that I'm-guessing should be a jira logo 
I've no idea why it isn't rendering or why I'm-just getting 
a text thing here I'm look at that some other point but 
anyway I-can I can see this has been created and I can 
actually click in it and you've-got some details and things 
um that are present here so that's really cool you-can see 
the issues and things in JRA but if we do something to 
actually generate-some activity here I'll show you how the 
um what it looks like on the other side-so if I go back to 
test project um let's make a new-branch and I call it I 
know demo oh actually you know what I should-have done this 
is better let's go back um let's make a branch and we'll 
call it-after our jira-issue right now it will be able to 
track it-and let's just edit something in here um we go 
testing again and in my commit-message I'll reference this 
so um working on test three yeah that'll do-you know you 
can put a full commit message in but the important thing 
it's-it's finding like that key okay so that's now gone if 
I go over-to jir now here we go it's already found that 
there's a branch if I refresh this-it might know that yeah 
there we go and the commit so this is it's already-started 
tracking this and and the activities getting recorded like 
I made-a commit and I mentioned it and here's the link to 
it and this also works if-you do um yeah let's do a merge 
request working on test three because I called-the branch 
the same thing as a j as an open Jer issue when I go to 
close it it-automatically populates it with this te uh this 
text as well which is really-nice so yeah let's do that 
create mer request and there we go I will merge-it and if 
we go back over here and refresh here we go yeah so it's 
all been-updated so we can track it there's a commit 
there's the merge request and-there's the you know it's 
been closed by that commit and you can see it's-actually 
moving moved into the done pile now so all of that 
automations just just-happen for us which is really nice so 
the way you go about hooking all-of these things up um 
apart from yeah the https the TLs-stuff which is required 
um you do have to allow access obviously to like your-local 
network wherever Jirus hosted um I I've not done this 
process by the-with like the the hosted Joc Cloud thing or 
whatever their SAS thing is um I-don't actually know what 
the process involved there is this is only I hasten-to add 
for like self-hosted stuff um yeah so you have to allow 
access to-your your internal Network and that's you do 
through the gitlab network admin-stuff the other thing you 
need is a jir personal access token and this is for-the 
integration so that gitlab can see jir issues-um it works 
pretty much the same way that we we think of you know 
gitlab as-personal access tokens you just go in see if I 
can remember it-it's profile I think yeah yeah yeah is you 
just go to your user account profile-and then you create um 
a personal access token-um so yeah this does mean that the 
the user that this personal access token is-associated with 
needs to have the ability to um I think be like an owner-of 
the the various projects so that's a consideration you'll 
have to make and-you have to decide whether you're going to 
reuse the same connection because you-could in theory have 
a separate user and a separate personal access token 
for-each project or whatever that you want to hook up if 
you wanted to like limit-the blast radius of one of these 
tokens getting you know leaked or exposed or-whatever 
that's probably what would suggest I'm guessing but um you 
don't-actually need to everything can work over the same 
like user connection as-long as that user's got the ability 
to I think it's owner I don't think you need-admin 
privileges I think it is just owner on J of these projects 
which I've-got a few going here so the first thing you do 
when you do this um if you go to-the admin era in gitlab 
and go to settings and-Integrations uh you can find jir in 
the list and you can configure it which I've-already done 
but it shows up like this and it's really straightforward 
you just-stick the the URL in uh the API URL you can leave 
blank if it's the same as the-web URL um use a personal 
access token put-your token in and then I've triggered or 
ticked all of these things and said so-if someone makes a 
commit or a merge request I want to send 
everything-including all the details along with it and I 
want to enable J-transitions which means that's the thing 
when I put closes and then the issue-number it will 
automatically move it uh down here you've got some 
issue-matching about how it detects those issue uh keys I 
think it calls them yeah-yeah issue Keys I've left these 
blank I got-confused to start with because I thought these 
were the things that reference the-actual like how you 
could limit it or whatever to particular projects 
that's-done in a separate place this is only if you're 
using different key format so not-you know J-1 or something 
like that or you're putting a prefix in them so I-just left 
these things blank and then after you've got that-that's 
like the base configuration that um other projects can 
inherit as it-were um so if we pick my let's go back and 
I'll show you how this is configured-if we go to let's go 
to my first test project first and in here we've got 
the-settings and integration and when you go 
into-individual projects to enable jir there's this little 
drop down up here-that says um use default settings or use 
custom-settings what you'll want to do is go to use 
custom-settings and then you can scroll down and you can 
enable J issues and then-this is where you put your um like 
what the jir project prefix is in-there um and all the 
other details like the personal access token it says 
just-leave blank to use the current configuration so 
they're not exposed but-you can just use the the base 
default ones that you've-configured and there's also this 
thing I haven't played around with this but-apparently like 
if the vulnerabilities are created you know there's the 
option-in security uh the security dashboard to 
automatically create issues from-vulnerabilities you can 
automate that process in jir apparently but I've not-tried 
that and there's a little test settings button you can 
click and yeah-connection successful so if you look at my 
other projects I've got here another-test yeah and 
Integrations-the J in this one again is using custom 
settings but you see I'm using a-different project key and 
that's how I map them these different projects get-mapped 
to these different projects-here okay and the other side of 
it which is-how you get um uh jir to see all the changes 
and track the changes that are-happening in gitlab-is it's 
one of these processes where you have to create cback URLs 
and tokens so-you have to have like two windows open really 
and swap between them so in the-case I'm thinking of with 
this customer this is going to necessitate getting the-jir 
teams and the the gitlab admins together and putting them 
together-um so what you do first is it's called 
an-application Link in jir and that you can get to by going 
to-settings and applications-and yeah application links on 
the left hand side so you can create a new-application 
again if you're concerned about limiting like the blast 
radius of-things getting leaked or exposed whatever 
you-might want to do one of these per team I guess um I've 
just used the same one for-for all the the connectivity and 
when you create this um-you also have to go into gitlab and 
it's where's the-setting yeah add new application yeah so 
we have to go to your user account this-time preferences so 
yeah you'll need a user account on gitlab that has the 
um-relevant permissions to repositories again so this is 
why you might want to-split things out into I guess like 
per project or per group-basis um but yeah there's this 
applications button and you can add new-application and you 
just give it a name like um jir and tick the API box 
which-apparently is is required uh for this to work and 
then you put the details from-one thing into the other so 
that will give you um and jir you'll get a-callback URL 
which you can paste into that box and when you go through 
this-process this will give you when you add a new 
application in gitlab this gives-you a new uh credential a 
new password which for some reason is upside down in-that 
window that's interesting change that um yeah so that-this 
creates a new account gives you a password or a credential 
key which you-can then go and go back into jir and paste 
that in and once you've got those-two things done so it's a 
bit of you know setup in one go to the other do-some more 
setup copy call back URLs and uh credentials from one to 
the-other once you've done that the next thing you do this 
is so jir can talk to-gitlab you then need to go to this 
thing dvcs accounts and this is where you hook-things up 
per um per-group yes per group I think I think yeah it must 
be because I've got one for that-yeah yeah so it's one per 
group and in there um when you're setting this-up um it's 
this window yep uh you point it-to a it's calls it a team 
in jir but what it really is is the the name of of-the 
group as it exists in gitlab so uh in other-words um-this 
that part of the URL okay however it appears there that's 
what you put in-and that's gives it access to that 
particular group when that's in place-you can you just um 
you you tell it you want to use the account uh 
the-application link that you created earlier and then 
these VCS accounts can-then use that connection to connect 
back to gitlab and then they you can get all-the events 
that are happening like um you know commits branches merge 
requests-and so on so there's quite a few sort of accounts 
or connection places that you-you need to set this up in 
and that means I guess when you're doing it-you're going to 
have to consider what your group structure looks like on 
both-sides and how you're going to map them and you also 
need to consider are you-just going to do something quick 
and easy which would be to create the uh-just one connector 
account and one personal access-token and have like a a 
user that can access everything or you're going to go-sort 
of more granular which I'm assuming would be what we we 
would recommend-customers do but anyway that's it that's uh 
the sum-total of what I know about jur integration after 
like last few days-discuss thanks for this Mark um from 
what I've seen I think it's it's-important when we work 
with uh teams that they know that uh gitlab is 
the-controller the controller I guess in the right 
sometimes we'll get the ask oh can-we be in jira and have 
it close a gitlab issue and kind of 
backwards-implementation and so it's it's good to 
understand how this this hookup works-because we want to 
make sure it's like we're guiding them towards our 
platform-but we're we're still allowing for the the 
integration but uh we want them to-move like there is still 
a little bit of that like let's get you out of the 
jurus-system so I'm glad you brought this up yeah it's also 
you know our own once you-go back to if you go to use just 
using gitlab issues there's so there's a lot-nicer 
management you don't need any of this integration stuff to 
start with but-you also got things like you know when you 
create issues you can automatically-create merge requests 
and things and and create branches and it's a much 
nicer-experience than this but yeah certainly uh for the 
customer I'm working with at-the moment if they can't link 
jir together with gitlab um they're really-not going to 
adopt it and they they can't just replace jir because 
even-though we could say Hey you know you're paying for the 
same thing twice you know-you've got git LB why not use 
that uh there's so many other parts of the-business that 
are deeply tied into jir are using it so they're never 
going to-get rid of jir completely or they you know they 
might do I don't know we'll-keep pushing but um for the 
time being jir is there it's they need it and this-is like 
the perfect thing to actually get them using the platform 
and then-they can still tie all their history together and 
it and actually having like-the Auto closing stuff is um in 
many ways is a lot nicer than their current-workflow 
exactly this is like the like I mean-this in in a good way 
the level zero of getting them to understand yeah 
the-gitlab can integrate and and do the basic hookup to 
jira um in case they've-been a jir shop and they don't want 
to make the full transition then from a PS-perspective we 
have um you know Max is working on some of the gr migration 
so-that when they're ready to to transition over to git lab 
we we are building out-an importer tool that will 
automatically pull the issues and data and stuff that-they 
had created in J into the the gitlab board and then if you 
remember-from last week product is working on or they've 
worked on the ultimate agile-planning uh piece so that's 
another the product that can be like-again not I don't want 
to use the word upsell but for customers as they're-working 
on their TR like transformation from jir into gitlab uh 
planning-functionality it's like this is the the three-step 
approach I think of in terms-of like how we can help 
customers from a PS perspective-MH yeah I think I think 
there's really two use cases here so what drove the-atasan 
takeout play uh sales motion was really the fact that 
atasan is retiring-their self-managed instances and or 
pushing their customers to either go to-their SAS or their 
their higher end uh data center product so we saw 
an-opportunity to maybe you know uh replace jir completely 
that's why we basically-you know invested and and did the 
uh the jira migration tool to basically you-know move a 
customer completely out of J but that's a special case 
because if you-are on on uh atlassian server right now 
you're probably already a lagered in-terms of you know 
using jira and and you know some of these guys literally 
aren't-even paying licenses for any longer so so those 
folks are more likely to move-off of the atasan stack in 
totality large Enterprise customers less likely-uh it's 
it's less likely that you're going to move a large company 
with-thousands of J users off into gitlab um so you know 
always keep in mind-different different archetypes or 
different customer profiles that we're-dealing with you 
know where one might apply or or the other uh got got 
a-question for you uh Mark so so what is the what's the 
impact in terms of-metrics so so we provide all this stuff 
out of the box if you use gitlab as a-platform end to end 
right uh you know and this flows into the Dora metric 
and-and you know we we keep track of all kinds of things in 
terms you know in-terms of the data model the data that we 
track now using Jiro does that basically-just ignore those 
specific you know data markers or what's going on or we 
don't-know I'm not sure I understand the question-so yeah 
could you could you um repeat so so so if if you basically 
keep using-jira from an issue management perspective that 
means that really uh-from a from a data model the way 
gitlab tracks issues and understands the status-of issues 
and you know all right is is not being tracked within 
gitlab-it's basic so it's I don't believe it is because if 
you if you look at it the-like when you plan things and 
things like there's there's no there's no-linkage here with 
any of anything under the-planning yeah that that that's 
just like a completely separate Island if if you-like it do 
have any integration what's whatsoever the only things that 
you do-see is it like if you go to jir issues for instance 
you get this little thing-which looks kind of the same but 
you're obviously very limited in what you can-do so like 
here's this one so we can still see the details there's 
links to-things like you know that's what I did There's 
commit there's the merge request-and and what happen but 
that that's that's it oh and I can click on this-thing 
which pops open jir yeah so so this is always I think-you 
know from a from a the the way we can position this from a 
PS perspective-I mean the the full value of our platform is 
always just realized if you-use our functionality end to 
end throughout the you know value stream as-soon as you 
start integrating bits and pieces all over the place which 
we can-do right uh we we we basically lose the visibility 
to some extent the reason I'm-pointing that out is there's 
even pieces of the system I I don't understand I've-just 
heard of like the whole value stream uh piece which which 
is-supposedly showing you your cycle times but it's all 
based on us using the-platform end to end yeah that's right 
I mean this this stuff is better than-nothing um and it 
helps get people onto it but yeah the the end goal should 
be-to have people the people that are using gitlab-the 
developers and so on to to actually be using it end to end 
yeah I mean no-this this is a real important integration 
because as you said there-there are some companies that 
will not just drop jir and move over to gitlab-that's 
that's just the reality in the market okay anything-else 
right I'll stop the share then when wake up yeah no I'm I'm 
here-good morning uh I was just GNA say well-thanks Mark 
appreciate it that's awesome um if there are any other 
questions-folks have just reach out to myself from Mark the 
email VI slack or even just-drop a comment in the uh in the 
enablement office enablement open Office-notes and we'll 
try to get that answer for you yeah in particularly as well 
I-mean don't also i' say this is the first time I've done 
this right so um I-probably got things wrong or um use 
wrong terminology or whatever but if if-anyone in the 
future is watching this and notices anything glaringly 
wrong do-let me know okay was-good that case let's all take 
some uh time back thank you very much Mark again-and take 
care everyone have a great weekend thank you guys
